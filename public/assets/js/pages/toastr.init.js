/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/toastr.init.js":
/*!*******************************************!*\
  !*** ./resources/js/pages/toastr.init.js ***!
  \*******************************************/
/***/ (() => {

eval("/*\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\nAuthor: CoderThemes\nWebsite: https://coderthemes.com/\nContact: support@coderthemes.com\nFile: Toastr init js\n*/\n!function ($) {\n  'use strict';\n\n  var NotificationApp = function NotificationApp() {};\n  /**\n   * Send Notification\n   * @param {*} heading heading text\n   * @param {*} body body text\n   * @param {*} position position e.g top-right, top-left, bottom-left, etc\n   * @param {*} loaderBgColor loader background color\n   * @param {*} icon icon which needs to be displayed\n   * @param {*} hideAfter automatically hide after seconds\n   * @param {*} stack \n   */\n\n\n  NotificationApp.prototype.send = function (heading, body, position, loaderBgColor, icon, hideAfter, stack, showHideTransition) {\n    // default      \n    if (!hideAfter) hideAfter = 3000;\n    if (!stack) stack = 1;\n    var options = {\n      heading: heading,\n      text: body,\n      position: position,\n      loaderBg: loaderBgColor,\n      icon: icon,\n      hideAfter: hideAfter,\n      stack: stack\n    };\n    if (showHideTransition) options.showHideTransition = showHideTransition;\n    console.log(options);\n    $.toast().reset('all');\n    $.toast(options);\n  }, $.NotificationApp = new NotificationApp(), $.NotificationApp.Constructor = NotificationApp;\n}(window.jQuery), //initializing main application module\nfunction ($) {\n  \"use strict\"; // notification examples\n\n  $(\"#toastr-one\").on('click', function (e) {\n    $.NotificationApp.send(\"Heads up!\", \"This alert needs your attention, but it is not super important.\", 'top-right', '#3b98b5', 'info');\n  });\n  $(\"#toastr-two\").on('click', function (e) {\n    $.NotificationApp.send(\"Heads up!\", \"Check below fields please.\", 'top-center', '#da8609', 'warning');\n  });\n  $(\"#toastr-three\").on('click', function (e) {\n    $.NotificationApp.send(\"Well Done!\", \"You successfully read this important alert message\", 'top-right', '#5ba035', 'success');\n  });\n  $(\"#toastr-four\").on('click', function (e) {\n    $.NotificationApp.send(\"Oh snap!\", \"Change a few things up and try submitting again.\", 'top-right', '#bf441d', 'danger');\n  });\n  $(\"#toastr-five\").on('click', function (e) {\n    $.NotificationApp.send(\"How to contribute?\", ['Fork the repository', 'Improve/extend the functionality', 'Create a pull request'], 'top-right', '#1ea69a', 'info');\n  });\n  $(\"#toastr-six\").on('click', function (e) {\n    $.NotificationApp.send(\"Can I add <em>icons</em>?\", \"Yes! check this <a href='https://github.com/kamranahmedse/jquery-toast-plugin/commits/master'>update</a>.\", 'top-right', '#1ea69a', 'info', false);\n  });\n  $(\"#toastr-seven\").on('click', function (e) {\n    $.NotificationApp.send(\"\", \"Set the `hideAfter` property to false and the toast will become sticky.\", 'top-right', '#1ea69a', '');\n  });\n  $(\"#toastr-eight\").on('click', function (e) {\n    $.NotificationApp.send(\"\", \"Set the `showHideTransition` property to fade|plain|slide to achieve different transitions.\", 'top-right', '#1ea69a', 'info', 3000, 1, 'fade');\n  });\n  $(\"#toastr-nine\").on('click', function (e) {\n    $.NotificationApp.send(\"Slide transition\", \"Set the `showHideTransition` property to fade|plain|slide to achieve different transitions.\", 'top-right', '#1ea69a', 'info', 3000, 1, 'slide');\n  });\n  $(\"#toastr-ten\").on('click', function (e) {\n    $.NotificationApp.send(\"Plain transition\", \"Set the `showHideTransition` property to fade|plain|slide to achieve different transitions.\", 'top-right', '#3b98b5', 'info', 3000, 1, 'plain');\n  });\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/toastr.init.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/toastr.init.js"]();
/******/ 	
/******/ })()
;